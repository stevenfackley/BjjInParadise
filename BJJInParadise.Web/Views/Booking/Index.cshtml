@model BJJInParadise.Web.ViewModels.NewBookingViewModel
@{
    ViewBag.Title = "Booking";
    ;
}

@section styles{
   
    <style>
        #mainNav {
            background: #000 !important;
        }

        #bookingContainer {
            margin-top: 60px;
        }
      
    </style>
 

}

<script src="//www.paypalobjects.com/api/checkout.js"></script>


<div class="container" id="bookingContainer">


    <div class="wrapper">
        <div class="checkout container">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "payment-form" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.UserId)
                @Html.HiddenFor(x => x.Email)
                @Html.HiddenFor(x => x.RoomOptions)
                @Html.HiddenFor(x => x.CampId)
            
       
                <section>
                   
                    <h2>@Model.CampName</h2>
                    <label for="amount">
                          Room Options: 
                     
                        
                        <select name="amount" id="campRoomOptions" class="form-control">
                            @foreach(var item in Model.RoomOptions)
                            {
                                <option value="@item.CampRoomOptionId" data-cost="@item.CostPerPerson">
                                    @(item.RoomType + " " + item.CostPerPerson.ToString("C0"))
                                </option>
                            }
                        </select>
          
                    </label>

                    <div class="bt-drop-in-wrapper align-content-center">
                        <div id="paypal-button-container"></div>
                       
                    </div>
                </section>


            }
        </div>
    </div>

</div>
@section Scripts {
   <script src="//cdnjs.cloudflare.com/ajax/libs/jquery.blockUI/2.70/jquery.blockUI.min.js"></script>
    <script type="text/javascript">


  
        var client_token = "@Model.ClientToken";
        var form = document.querySelector('#payment-form');

            $("#paypal-animation-container").remove();
             // Render the PayPal button
        paypal.Button.render({
// Set your environment
            env: '@(Model.IsLive ? "production" : "sandbox")', // sandbox | production

// Specify the style of the button
            style: {
                layout: 'vertical',  // horizontal | vertical
                size:   'medium',    // medium | large | responsive
                shape:  'rect',      // pill | rect
                color:  'gold'       // gold | blue | silver | white | black
            },

// Specify allowed and disallowed funding sources
//
// Options:
// - paypal.FUNDING.CARD
// - paypal.FUNDING.CREDIT
// - paypal.FUNDING.ELV
            funding: {
                allowed: [
                    paypal.FUNDING.CARD,
                    paypal.FUNDING.CREDIT
                ],
                disallowed: []
            },
            client: {
                sandbox: 'AbYml2Bi2Z4yOkZ0SaanEZL_lCTlpIR40SuNR53ufb_lxxBR6ZPm0HU10CiZx3Zk3T-DGCv4yIId6j-F',
                production: 'ATc8yNG_xClCkR9bupldp6n5gglZvKmBhP7zzcZ2XfvZvmFlmiLFgpRC1hBt0jC4QeQFxtgHrUXQlfJx'
            },
            payment: function (data, actions) {
                return actions.payment.create({
                    payment: {
                        transactions: [
                            {
                                amount: {
                                    total: $("#campRoomOptions").find(':selected').data('cost'),
                                    currency: 'USD'
                                }
                            }
                        ]
                    }
                });
            },

            onAuthorize: function (data, actions) {
                return actions.payment.execute()
                    .then(function (e) {
                        $.blockUI();
                        var obj = @Html.Raw(Json.Encode(Model));
                        obj.PayPalTransactionId = e.id;
                        obj.AmountPaid = $("#campRoomOptions").find(':selected').data('cost');
                        $.ajax({
                            url: "@Url.Action("Index")",
                            type: "POST",
                            data: JSON.stringify(obj),
                            contentType: "application/json",
                            dataType: "json",
                            error: function (response) {
                                window.location.href = '/Booking/'
                            },
                            success: function (response) {
                                window.location.href = '/Booking/Success/' + response.data.BookingId;
                            }
                        });
                    }).then(function (e) {
                       
                    });
            }
        }, '#paypal-button-container');
     
        
       

        function formatAsCurrency(value) {
            var formatter = new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: 'USD',
                minimumFractionDigits: 2,
                // the default value for minimumFractionDigits depends on the currency
                // and is usually already 2
            });

            return formatter.format(value);
        }


    </script>
}
