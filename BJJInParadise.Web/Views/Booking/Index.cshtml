@model BJJInParadise.Web.ViewModels.NewBookingViewModel
@{
    ViewBag.Title = "Booking";
    ;
}

@section styles{
   
    <style>
        #mainNav {
            background: #000 !important;
        }

        #bookingContainer {
            margin-top: 160px;
        }

    </style>
 

}

<script src="//js.braintreegateway.com/web/dropin/1.11.0/js/dropin.min.js"></script>
<div class="container" id="bookingContainer">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.UserId)
        @Html.HiddenFor(x => x.Email)
        @Html.HiddenFor(x => x.RoomOptions)
        <div class="wrapper">
            <div class="checkout container">
                <form id="payment-form" >
                    <section>
                        <label for="amount">
                            <span class="input-label">Amount</span>
                            <div class="input-wrapper amount-wrapper">
                                <input id="amount" name="amount" type="tel" min="1" placeholder="Amount" value="10">
                            </div>
                        </label>

                        <div class="bt-drop-in-wrapper">
                            <div id="bt-dropin"></div>
                        </div>
                    </section>

                    <input id="nonce" name="payment_method_nonce" type="hidden"/>
                    <button class="button" type="submit"><span>Test Transaction</span></button>
                </form>

            </div>

        </div>
    }
</div>
@section Scripts {
   
    <script type="text/javascript">

        (function () {
            var amount = document.querySelector('#amount');
            var amountLabel = document.querySelector('label[for="amount"]');

            amount.addEventListener('focus', function () {
                amountLabel.className = 'has-focus';
            }, false);
            amount.addEventListener('blur', function () {
                amountLabel.className = '';
            }, false);
        })();


        var client_token = "@Model.ClientToken";
        var form = document.querySelector('#payment-form');

        braintree.dropin.create({
            authorization: client_token,
            container: '#bt-dropin',
            paypal: {
                flow: 'vault'
            }
        }, function (createErr, instance) {
            form.addEventListener('submit', function (event) {
                event.preventDefault();

                instance.requestPaymentMethod(function (err, payload) {
                    if (err) {
                        console.log('Error', err);
                        return;
                    }

                    // Add the nonce to the form and submit
                    document.querySelector('#nonce').value = payload.nonce;
                    form.submit();
                });
            });
        });
      
     

        function formatAsCurrency(value) {
            var formatter = new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: 'USD',
                minimumFractionDigits: 2,
                // the default value for minimumFractionDigits depends on the currency
                // and is usually already 2
            });

            return formatter.format(value);
        }


    </script>
}
